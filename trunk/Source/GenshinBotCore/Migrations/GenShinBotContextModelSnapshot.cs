// <auto-generated />
using GenshinBotCore.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GenshinBotCore.Migrations
{
    [DbContext(typeof(GenShinBotContext))]
    partial class GenShinBotContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.0");

            modelBuilder.Entity("GenshinBotCore.Entities.Pictures", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Picture")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("Picture");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Pictures");
                });

            modelBuilder.Entity("GenshinBotCore.Entities.Users", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("GenshinUid")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("MihoyoId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("QQ")
                        .HasColumnType("INTEGER")
                        .HasColumnName("QQ");

                    b.Property<string>("ServerId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("GenshinBotCore.Entities.UsersComment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("QQ")
                        .HasColumnType("INTEGER")
                        .HasColumnName("QQ");

                    b.Property<string>("Time")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("VideoUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("UsersComment", (string)null);
                });

            modelBuilder.Entity("GenshinBotCore.Entities.UsersCookies", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Cookies")
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UsersCookies");
                });

            modelBuilder.Entity("GenshinBotCore.Entities.UsersSecret", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "UserId" }, "IX_UsersSecret_UserId");

                    b.ToTable("UsersSecret", (string)null);
                });

            modelBuilder.Entity("GenshinBotCore.Entities.UsersCookies", b =>
                {
                    b.HasOne("GenshinBotCore.Entities.Users", "User")
                        .WithMany("UsersCookies")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("GenshinBotCore.Entities.UsersSecret", b =>
                {
                    b.HasOne("GenshinBotCore.Entities.Users", "User")
                        .WithMany("UsersSecrets")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("GenshinBotCore.Entities.Users", b =>
                {
                    b.Navigation("UsersCookies");

                    b.Navigation("UsersSecrets");
                });
#pragma warning restore 612, 618
        }
    }
}
